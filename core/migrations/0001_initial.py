# Generated by Django 4.2.16 on 2025-06-12 23:59

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Bill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bill_number", models.CharField(db_index=True, max_length=50)),
                ("subject", models.TextField()),
                (
                    "session",
                    models.IntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "bill_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("GOVERNMENT", "Government Bill"),
                            ("PRIVATE_MEMBER", "Private Member's Bill"),
                            ("PRIVATE", "Private Bill"),
                            ("SENATE_GOVERNMENT", "Senate Government Bill"),
                            ("SENATE_PRIVATE_MEMBER", "Senate Private Member's Bill"),
                        ],
                        max_length=30,
                        null=True,
                    ),
                ),
                (
                    "current_status",
                    models.CharField(
                        choices=[
                            ("INTRODUCED", "Introduced"),
                            ("FIRST_READING", "First Reading"),
                            ("SECOND_READING", "Second Reading"),
                            ("COMMITTEE", "In Committee"),
                            ("REPORT_STAGE", "Report Stage"),
                            ("THIRD_READING", "Third Reading"),
                            ("SENATE", "In Senate"),
                            ("ROYAL_ASSENT", "Received Royal Assent"),
                            ("DEFEATED", "Defeated"),
                            ("WITHDRAWN", "Withdrawn"),
                        ],
                        default="INTRODUCED",
                        max_length=30,
                    ),
                ),
                ("introduced_date", models.DateField(blank=True, null=True)),
                ("last_activity_date", models.DateField(blank=True, null=True)),
                ("policy_tags", models.JSONField(blank=True, default=list)),
                ("primary_policy_area", models.CharField(blank=True, max_length=100)),
                (
                    "classification_confidence",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                ("auto_classified", models.BooleanField(default=False)),
                ("classification_date", models.DateTimeField(blank=True, null=True)),
                ("bill_url", models.URLField(blank=True, max_length=500)),
                ("summary", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-parliament__number", "-introduced_date"],
            },
        ),
        migrations.CreateModel(
            name="Committee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "committee_acronym",
                    models.CharField(db_index=True, max_length=50, unique=True),
                ),
                ("committee_name", models.CharField(max_length=255)),
                (
                    "committee_type",
                    models.CharField(
                        choices=[
                            ("STANDING", "Standing Committee"),
                            ("SPECIAL", "Special Committee"),
                            ("JOINT", "Joint Committee"),
                            ("OTHER", "Other Committee"),
                        ],
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["committee_name"],
            },
        ),
        migrations.CreateModel(
            name="CommitteeMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("CHAIR", "Chair"),
                            ("VICE_CHAIR", "Vice-Chair"),
                            ("MEMBER", "Member"),
                            ("ASSOCIATE", "Associate Member"),
                        ],
                        default="MEMBER",
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateField(default=django.utils.timezone.now)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="MemberOfParliament",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=255)),
                ("honourific_title", models.CharField(blank=True, max_length=50)),
                ("political_affiliation", models.CharField(max_length=100)),
                (
                    "party_code",
                    models.CharField(
                        choices=[
                            ("CPC", "Conservative Party of Canada"),
                            ("LPC", "Liberal Party of Canada"),
                            ("NDP", "New Democratic Party"),
                            ("BQ", "Bloc Québécois"),
                            ("GP", "Green Party of Canada"),
                            ("PPC", "People's Party of Canada"),
                            ("IND", "Independent"),
                            ("OTHER", "Other"),
                        ],
                        default="OTHER",
                        max_length=10,
                    ),
                ),
                ("constituency", models.CharField(db_index=True, max_length=255)),
                ("province", models.CharField(db_index=True, max_length=50)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active Member of Parliament"),
                            ("FORMER", "Former Member of Parliament"),
                            ("DECEASED", "Deceased"),
                        ],
                        default="ACTIVE",
                        max_length=20,
                    ),
                ),
                ("first_elected", models.DateField(blank=True, null=True)),
                ("last_active", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Parliament",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number",
                    models.IntegerField(
                        unique=True,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("is_current", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ["-number"],
            },
        ),
        migrations.CreateModel(
            name="PolicyTopic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "keywords",
                    models.TextField(
                        help_text="Comma-separated list of keywords used for classification"
                    ),
                ),
                ("color", models.CharField(default="#6B7280", max_length=7)),
                (
                    "parent_topic",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.policytopic",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="VoteRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("vote_number", models.IntegerField(db_index=True, unique=True)),
                ("subject", models.TextField()),
                (
                    "vote_type",
                    models.CharField(
                        choices=[
                            ("RECORDED", "Recorded Division"),
                            ("VOICE", "Voice Vote"),
                            ("STANDING", "Standing Vote"),
                        ],
                        default="RECORDED",
                        max_length=20,
                    ),
                ),
                (
                    "vote_result",
                    models.CharField(
                        choices=[
                            ("AGREED", "Agreed to"),
                            ("NEGATIVED", "Negatived"),
                            ("TIE", "Tie"),
                        ],
                        max_length=20,
                    ),
                ),
                ("vote_date", models.DateField(db_index=True)),
                (
                    "session",
                    models.IntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("yea_count", models.IntegerField(default=0)),
                ("nay_count", models.IntegerField(default=0)),
                ("paired_count", models.IntegerField(default=0)),
                ("policy_tags", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "parliament",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.parliament",
                    ),
                ),
                (
                    "related_bill",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.bill",
                    ),
                ),
            ],
            options={
                "ordering": ["-vote_number"],
            },
        ),
        migrations.CreateModel(
            name="UserWatchlist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "watched_committees",
                    models.ManyToManyField(blank=True, to="core.committee"),
                ),
                (
                    "watched_mps",
                    models.ManyToManyField(blank=True, to="core.memberofparliament"),
                ),
                (
                    "watched_policy_topics",
                    models.ManyToManyField(blank=True, to="core.policytopic"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MPVotingPattern",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_votes", models.IntegerField(default=0)),
                ("yea_votes", models.IntegerField(default=0)),
                ("nay_votes", models.IntegerField(default=0)),
                ("paired_votes", models.IntegerField(default=0)),
                ("absent_votes", models.IntegerField(default=0)),
                ("party_line_votes", models.IntegerField(default=0)),
                ("party_loyalty_percentage", models.FloatField(default=0.0)),
                ("policy_vote_counts", models.JSONField(default=dict)),
                ("last_calculated", models.DateTimeField(auto_now=True)),
                (
                    "mp",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.memberofparliament",
                    ),
                ),
                (
                    "parliament",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.parliament",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MPVote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "vote",
                    models.CharField(
                        choices=[
                            ("YEA", "Yea"),
                            ("NAY", "Nay"),
                            ("PAIRED", "Paired"),
                            ("ABSENT", "Absent"),
                        ],
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "mp",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.memberofparliament",
                    ),
                ),
                (
                    "vote_record",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.voterecord",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="memberofparliament",
            index=models.Index(
                fields=["name", "constituency"], name="core_member_name_9fa076_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="memberofparliament",
            index=models.Index(
                fields=["party_code", "status"], name="core_member_party_c_85ec6d_idx"
            ),
        ),
        migrations.AddField(
            model_name="committeemember",
            name="committee",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="core.committee"
            ),
        ),
        migrations.AddField(
            model_name="committeemember",
            name="mp",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="core.memberofparliament",
            ),
        ),
        migrations.AddField(
            model_name="committee",
            name="parliament",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="core.parliament"
            ),
        ),
        migrations.AddField(
            model_name="bill",
            name="parliament",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="core.parliament"
            ),
        ),
        migrations.AddField(
            model_name="bill",
            name="sponsor",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="core.memberofparliament",
            ),
        ),
        migrations.AddIndex(
            model_name="voterecord",
            index=models.Index(
                fields=["vote_date", "parliament"],
                name="core_votere_vote_da_be7107_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="voterecord",
            index=models.Index(
                fields=["vote_result"], name="core_votere_vote_re_231d1a_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="mpvotingpattern",
            unique_together={("mp", "parliament")},
        ),
        migrations.AddIndex(
            model_name="mpvote",
            index=models.Index(
                fields=["vote_record", "vote"], name="core_mpvote_vote_re_f9b545_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="mpvote",
            index=models.Index(
                fields=["mp", "vote"], name="core_mpvote_mp_id_4adc55_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="mpvote",
            unique_together={("vote_record", "mp")},
        ),
        migrations.AddIndex(
            model_name="committeemember",
            index=models.Index(
                fields=["committee", "role"], name="core_commit_committ_f31c26_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="committeemember",
            unique_together={("committee", "mp", "start_date")},
        ),
        migrations.AlterUniqueTogether(
            name="committee",
            unique_together={("committee_acronym", "parliament")},
        ),
        migrations.AddIndex(
            model_name="bill",
            index=models.Index(
                fields=["bill_number", "parliament"],
                name="core_bill_bill_nu_a5b21c_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="bill",
            index=models.Index(
                fields=["current_status", "parliament"],
                name="core_bill_current_244f70_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="bill",
            index=models.Index(
                fields=["introduced_date"], name="core_bill_introdu_50a7fc_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="bill",
            unique_together={("bill_number", "parliament", "session")},
        ),
    ]
